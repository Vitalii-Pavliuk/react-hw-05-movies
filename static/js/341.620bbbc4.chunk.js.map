{"version":3,"file":"static/js/341.620bbbc4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieInfo.jsx","servises/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MovieDetails_searchForm__P73pR\",\"searchInput\":\"MovieDetails_searchInput__NLwCH\",\"searchButton\":\"MovieDetails_searchButton__VWztr\",\"movieList\":\"MovieDetails_movieList__6VmHF\",\"movieItem\":\"MovieDetails_movieItem__Xm+lY\",\"movieLink\":\"MovieDetails_movieLink__Ml8B2\",\"container\":\"MovieDetails_container__o8VqJ\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"details\":\"MovieDetails_details__tmd20\",\"title\":\"MovieDetails_title__RBndM\",\"score\":\"MovieDetails_score__67zDg\",\"overview\":\"MovieDetails_overview__EVogb\",\"genres\":\"MovieDetails_genres__80iSK\",\"additionalInfo\":\"MovieDetails_additionalInfo__qmwMY\",\"additionalInfoList\":\"MovieDetails_additionalInfoList__RZLw8\",\"infoLink\":\"MovieDetails_infoLink__7701A\",\"backButton\":\"MovieDetails_backButton__ilGfB\"};","import React, { Suspense, useEffect, useState } from \"react\"\nimport { NavLink, Outlet, useParams } from \"react-router-dom\"\nimport Notiflix from \"notiflix\"\nimport { fetchFilmDetails } from \"servises/API\"\nimport styles from \"./MovieDetails.module.css\"\n\nexport const MovieDetails = () => {\n  const { id } = useParams()\n  const [filmDetails, setFilmDetails] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (!id) return\n\n    setLoading(true);\n    fetchFilmDetails(id)\n      .then((data) => setFilmDetails(data))\n      .catch((err) => {\n        console.error(\"Error fetching film details:\", err)\n        Notiflix.Notify.failure(\n          \"Failed to load film details. Please try again later.\",\n        )\n      })\n  .finally(() => setLoading(false));\n  }, [id])\n  return (\n    <>\n      {loading && <p>Loading reviews...</p>}\n\n      {!loading && !filmDetails && (\n        <p>Sorry, we don't have any information about this film.</p>\n      )}\n      <div className={styles.container}>\n        {filmDetails && (\n          <div className={styles.wrapper}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/w500${filmDetails.poster_path}`}\n              alt={filmDetails.title || filmDetails.name}\n            />\n            <div className={styles.details}>\n              <h2 className={styles.title}>\n                {filmDetails.title || filmDetails.name}{\" \"}\n                {filmDetails.release_date\n                  ? `(${filmDetails.release_date.slice(0, 4)})`\n                  : \"\"}\n              </h2>\n              <p className={styles.score}>\n                User Score: {Math.round(filmDetails.vote_average * 10)}%\n              </p>\n              <p className={styles.overview}>{filmDetails.overview}</p>\n              <h3>Genres</h3>\n              <p className={styles.genres}>\n                {filmDetails.genres.map(({ name }) => name).join(\", \")}\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={styles.additionalInfo}>\n        <h3>Additional information</h3>\n        <ul className={styles.additionalInfoList}>\n          <li>\n            <NavLink to=\"cast\" className={styles.infoLink}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" className={styles.infoLink}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  )\n}\n\nexport default MovieDetails\n","import MovieDetails from \"components/MovieDetails/MovieDetails\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../components/MovieDetails/MovieDetails.module.css\"\n\nexport const MovieInfo = () => {\n\n  return (\n    <main>\n      <Link to={`/home`}>\n        <button type=\"button\" className={styles.backButton}>Go back</button>\n      </Link>\n    <MovieDetails />\n    </main>\n  );\n};\n\nexport default MovieInfo;\n\n","import axios from 'axios';\n\nconst API_KEY = '7bee32b9ab5cc082183e484fcd988607';\n\nexport const fetchPopularFilms = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const fetchFilmDetails = async (filmId) => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${filmId}`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport const fetchFilmByValue = async (searchValue) => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      query: searchValue,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport const fetchCast = async (filmId) => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${filmId}/credits`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport const fetchRewiews = async (filmId) => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${filmId}/reviews`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","filmDetails","setFilmDetails","_useState3","_useState4","loading","setLoading","useEffect","fetchFilmDetails","then","data","catch","err","console","error","Notiflix","finally","_jsxs","_Fragment","children","_jsx","className","styles","src","concat","poster_path","alt","title","name","release_date","slice","Math","round","vote_average","overview","genres","map","_ref","join","NavLink","to","Suspense","fallback","Outlet","MovieInfo","Link","type","MovieDetails","API_KEY","fetchPopularFilms","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","api_key","language","sent","log","results","abrupt","stop","apply","arguments","_ref2","_callee2","filmId","BASE_URL","_context2","_x","fetchFilmByValue","_ref3","_callee3","searchValue","_context3","query","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchRewiews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}