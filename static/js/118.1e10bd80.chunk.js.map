{"version":3,"file":"static/js/118.1e10bd80.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FoundMovies/FoundMovies.module.css?716a","components/FoundMovies/FoundMovies.jsx","pages/Movies.jsx","servises/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"FoundMovies_searchForm__dL203\",\"searchInput\":\"FoundMovies_searchInput__EcMao\",\"searchButton\":\"FoundMovies_searchButton__iFXhx\",\"movieList\":\"FoundMovies_movieList__dBwjK\",\"movieItem\":\"FoundMovies_movieItem__aO-2h\",\"movieLink\":\"FoundMovies_movieLink__wZSN3\"};","import React, { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { fetchFilmByValue } from 'servises/API';\nimport { Link } from 'react-router-dom';\nimport styles from './FoundMovies.module.css';\n\nconst FoundMovies = () => {\n  const [query, setQuery] = useState('');\n  const [submittedQuery, setSubmittedQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!query.trim()) {\n      Notiflix.Notify.warning('Please enter a film name.');\n      return;\n    }\n    setSubmittedQuery(query);\n  };\n\n  useEffect(() => {\n    if (!submittedQuery.trim()) return;\n\n    fetchFilmByValue(submittedQuery)\n      .then(data => setSearchResults(data.results))\n      .catch(err => {\n        console.error('Error fetching films:', err);\n        Notiflix.Notify.failure('Failed to load films. Please try again later.');\n      });\n  }, [submittedQuery]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.searchForm}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={query}\n          onChange={handleChange}\n          placeholder=\"Search films...\"\n          className={styles.searchInput}\n        />\n        <button type=\"submit\" className={styles.searchButton}>\n          Search\n        </button>\n      </form>\n\n      <ul className={styles.movieList}>\n        {searchResults.map(film => (\n          <li key={film.id} className={styles.movieItem}>\n            <Link to={`/movies/${film.id}`} className={styles.movieLink}>\n              {film.title || film.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default FoundMovies;\n","import FoundMovies from \"components/FoundMovies/FoundMovies\";\n\nexport const Movies = () => {\n  \n\n  return (\n    <main>\n       <FoundMovies /> \n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '7bee32b9ab5cc082183e484fcd988607';\n\nexport const fetchPopularFilms = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const fetchFilmDetails = async (filmId) => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${filmId}`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport const fetchFilmByValue = async (searchValue) => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      query: searchValue,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport const fetchCast = async (filmId) => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${filmId}/credits`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}\n\nexport const fetchRewiews = async (filmId) => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${filmId}/reviews`;\n  const response = await axios.get(BASE_URL, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US'\n    },\n  });\n  console.log(response.data);\n  return response.data;\n}"],"names":["_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","submittedQuery","setSubmittedQuery","_useState5","_useState6","searchResults","setSearchResults","useEffect","trim","fetchFilmByValue","then","data","results","catch","err","console","error","Notiflix","_jsxs","_Fragment","children","onSubmit","e","preventDefault","className","styles","_jsx","type","name","value","onChange","target","placeholder","map","film","Link","to","concat","id","title","Movies","FoundMovies","API_KEY","fetchPopularFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","api_key","language","sent","log","abrupt","stop","apply","arguments","fetchFilmDetails","_ref2","_callee2","filmId","BASE_URL","_context2","_x","_ref3","_callee3","searchValue","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchRewiews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}